generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  refreshtoken  String?
  firstName     String
  lastName      String
  assignedTasks AssignedTask[]
  createdTasks  Task[]         @relation("createdTasks")
}

model Task {
  id          Int            @id @default(autoincrement())
  title       String
  description String?
  creatorId   Int
  creator     User           @relation("createdTasks", fields: [creatorId], references: [id], onDelete: Cascade, map: "creator_fkey")
  workers     AssignedTask[]
}

model AssignedTask {
  id        Int         @id @default(autoincrement())
  taskId    Int
  workerId  Int?
  isActive  Boolean?    @default(false)
  task      Task        @relation(fields: [taskId], references: [id], onDelete: Cascade, map: "task_fkey")
  user      User?       @relation(fields: [workerId], references: [id], onDelete: Cascade, map: "user_fkey")
  workTime  Int         @default(0)
  TimeLines TimeLines[]

  @@unique([taskId, workerId], name: "taskid")
}

model TimeLines {
  id           Int          @id @default(autoincrement())
  taskId       Int
  startTime    DateTime?    @db.Timestamp(6)
  endTime      DateTime?    @db.Timestamp(6)
  AssignedTask AssignedTask @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "nasjk")
}
